{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/src/App.js\";\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { auth, createUserProfile } from \"./firebase/firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport SignIn from \"./pages/sign-in/signIn.component\";\nimport Login from \"./pages/login/login\";\nimport Navbar from \"../src/components/common/navbar/navbar.component\";\nimport Footer from \"../src/components/common/footer/footer.component\";\nimport Home from \"./pages/homw/home.component\";\nimport Categories from \"../src/pages/categories/categories.component\";\nimport \"./App.scss\";\nimport SideBar from \"./components/common/sideBar/sideBar\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfile(userAuth);\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SideBar, {\n      pageWrapId: \"page-wrap\",\n      outerContainerId: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      component: SignIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      component: Home,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/src/App.js"],"names":["React","Route","Switch","auth","createUserProfile","connect","setCurrentUser","selectCurrentUser","createStructuredSelector","SignIn","Login","Navbar","Footer","Home","Categories","SideBar","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","mapStateToProps","currentUser","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport { Route, Switch } from \"react-router-dom\";\n\nimport { auth, createUserProfile } from \"./firebase/firebase\";\n\nimport { connect } from \"react-redux\";\nimport { setCurrentUser } from \"./redux/user/user.actions\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport SignIn from \"./pages/sign-in/signIn.component\";\nimport Login from \"./pages/login/login\";\n\nimport Navbar from \"../src/components/common/navbar/navbar.component\";\nimport Footer from \"../src/components/common/footer/footer.component\";\n\nimport Home from \"./pages/homw/home.component\";\nimport Categories from \"../src/pages/categories/categories.component\";\n\nimport \"./App.scss\";\n\nimport SideBar from \"./components/common/sideBar/sideBar\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    const { setCurrentUser } = this.props;\n\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfile(userAuth);\n\n        userRef.onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div id=\"app\">\n        <Navbar />\n        <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} />\n        <Switch>\n          <Route exact path=\"/signin\" component={SignIn} />\n          <Route exact path=\"/login\" component={Login} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}