{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/client/src/pages/orders/order.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { firestore } from \"../../firebase/firebase\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport \"./order.module.scss\";\nimport rootReducer from \"../../redux/root-reducer\";\n\nconst Order = () => {\n  const [order, setOrder] = useState([]);\n  const [isLoading, setLoading] = useState(true); // console.log(order);\n\n  const data = localStorage.getItem(\"persist:root\");\n  console.log(JSON.parse(data));\n  se;\n  console.log(JSON.parsedata);\n\n  const getCartItems = () => {\n    firestore.collection(\"users\").doc(currentUser.id).collection(\"cartItems\").get().then(data => {\n      const array = [];\n      data.forEach(doc => {\n        const obj = {\n          name: doc.data().name,\n          quantity: doc.data().quantity,\n          price: doc.data().price,\n          color: doc.data().color,\n          size: doc.data().size\n        };\n        array.push(obj);\n      });\n      console.log(array);\n      setOrder(array);\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    getCartItems();\n  }, []);\n  useEffect(() => {}, [isLoading]);\n  return /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }\n  }, \"Order Page\");\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\nexport default connect(mapStateToProps)(Order);","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/client/src/pages/orders/order.component.jsx"],"names":["React","useState","useEffect","firestore","selectCurrentUser","connect","createStructuredSelector","rootReducer","Order","order","setOrder","isLoading","setLoading","data","localStorage","getItem","console","log","JSON","parse","se","parsedata","getCartItems","collection","doc","currentUser","id","get","then","array","forEach","obj","name","quantity","price","color","size","push","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAO,qBAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,UAAZ,IAA0BX,QAAQ,CAAC,IAAD,CAAxC,CAFkB,CAGlB;;AACA,QAAMY,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWN,IAAX,CAAZ;AACAO,EAAAA,EAAE;AACFJ,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACG,SAAjB;;AAIA,QAAMC,YAAY,GAAG,MAAM;AACzBnB,IAAAA,SAAS,CACNoB,UADH,CACc,OADd,EAEGC,GAFH,CAEOC,WAAW,CAACC,EAFnB,EAGGH,UAHH,CAGc,WAHd,EAIGI,GAJH,GAKGC,IALH,CAKSf,IAAD,IAAU;AACd,YAAMgB,KAAK,GAAG,EAAd;AACAhB,MAAAA,IAAI,CAACiB,OAAL,CAAcN,GAAD,IAAS;AACpB,cAAMO,GAAG,GAAG;AACVC,UAAAA,IAAI,EAAER,GAAG,CAACX,IAAJ,GAAWmB,IADP;AAEVC,UAAAA,QAAQ,EAAET,GAAG,CAACX,IAAJ,GAAWoB,QAFX;AAGVC,UAAAA,KAAK,EAAEV,GAAG,CAACX,IAAJ,GAAWqB,KAHR;AAIVC,UAAAA,KAAK,EAAEX,GAAG,CAACX,IAAJ,GAAWsB,KAJR;AAKVC,UAAAA,IAAI,EAAEZ,GAAG,CAACX,IAAJ,GAAWuB;AALP,SAAZ;AAOAP,QAAAA,KAAK,CAACQ,IAAN,CAAWN,GAAX;AACD,OATD;AAUAf,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACAnB,MAAAA,QAAQ,CAACmB,KAAD,CAAR;AACAjB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KApBH;AAqBD,GAtBD;;AAwBAV,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIApB,EAAAA,SAAS,CAAC,MAAI,CAEb,CAFQ,EAEN,CAACS,SAAD,CAFM,CAAT;AAIA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,CA5CD;;AA8CA,MAAM2B,eAAe,GAAGhC,wBAAwB,CAAC;AAC/CmB,EAAAA,WAAW,EAAErB;AADkC,CAAD,CAAhD;AAIA,eAAeC,OAAO,CAACiC,eAAD,CAAP,CAAyB9B,KAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { firestore } from \"../../firebase/firebase\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport \"./order.module.scss\";\nimport rootReducer from \"../../redux/root-reducer\";\n\nconst Order = () => {\n  const [order, setOrder] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  // console.log(order);\n  const data = localStorage.getItem(\"persist:root\");\n  console.log(JSON.parse(data));\n  se\n  console.log(JSON.parsedata);\n\n\n\n  const getCartItems = () => {\n    firestore\n      .collection(\"users\")\n      .doc(currentUser.id)\n      .collection(\"cartItems\")\n      .get()\n      .then((data) => {\n        const array = [];\n        data.forEach((doc) => {\n          const obj = {\n            name: doc.data().name,\n            quantity: doc.data().quantity,\n            price: doc.data().price,\n            color: doc.data().color,\n            size: doc.data().size,\n          };\n          array.push(obj);\n        });\n        console.log(array);\n        setOrder(array);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getCartItems();\n  }, []);\n\n  useEffect(()=>{\n\n  }, [isLoading])\n\n  return <h1>Order Page</h1>;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps)(Order);\n"]},"metadata":{},"sourceType":"module"}