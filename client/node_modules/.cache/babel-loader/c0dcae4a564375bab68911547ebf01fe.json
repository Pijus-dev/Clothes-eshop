{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/client/src/components/comment/comment.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./comment.scss\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { firestore, firebase } from \"../../firebase/firebase\";\nimport CommentSection from \"../common/ comment-section/commentSection\";\n\nconst Comment = ({\n  currentUser,\n  history,\n  db\n}) => {\n  const [posts, setPosts] = useState([]);\n  const [stars, setStars] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  const addComment = () => {\n    const newComment = {\n      comment: comment,\n      postedTime: firebase.firestore.Timestamp.fromDate(new Date()),\n      userName: currentUser.displayName,\n      rating: stars\n    };\n    db.collection(\"reviews\").add(newComment).then(() => {\n      setPosts([...posts, { ...newComment\n      }]);\n      setComment(\"\");\n      setStars(\"\");\n    });\n  };\n\n  const getComment = () => {\n    db.collection(\"reviews\").get().then(data => {\n      const array = [];\n      data.forEach(doc => {\n        const obj = {\n          comment: doc.data().comment,\n          userName: doc.data().userName,\n          rating: doc.data().rating,\n          postedTime: doc.data().postedTime\n        };\n        array.push(obj);\n      });\n      setPosts(array);\n    });\n  };\n\n  useEffect(() => {\n    getComment();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Product reviews:\"), posts.map(post => /*#__PURE__*/React.createElement(CommentSection, {\n    key: post.id,\n    name: post.userName,\n    comment: post.comment,\n    time: post.postedTime.toDate().toLocaleDateString(\"lt\"),\n    rating: post.rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  })), currentUser ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    placeholder: \"Share your experience...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReactStars, {\n    count: 5,\n    activeColor: \"#ffd700\",\n    edit: true,\n    onChange: e => setStars(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }))) : null, currentUser ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addComment(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Submit\")) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => history.push(\"/login\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Login first\")));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\nexport default withRouter(connect(mapStateToProps)(Comment));","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/client/src/components/comment/comment.component.jsx"],"names":["React","useState","useEffect","ReactStars","withRouter","connect","createStructuredSelector","selectCurrentUser","firestore","firebase","CommentSection","Comment","currentUser","history","db","posts","setPosts","stars","setStars","comment","setComment","addComment","newComment","postedTime","Timestamp","fromDate","Date","userName","displayName","rating","collection","add","then","getComment","get","data","array","forEach","doc","obj","push","map","post","id","toDate","toLocaleDateString","e","target","value","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport \"./comment.scss\";\n\nimport ReactStars from \"react-rating-stars-component\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\n\nimport { firestore, firebase } from \"../../firebase/firebase\";\nimport CommentSection from \"../common/ comment-section/commentSection\";\n\nconst Comment = ({ currentUser, history, db }) => {\n  const [posts, setPosts] = useState([]);\n  const [stars, setStars] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  const addComment = () => {\n    const newComment = {\n      comment: comment,\n      postedTime: firebase.firestore.Timestamp.fromDate(new Date()),\n      userName: currentUser.displayName,\n      rating: stars,\n    };\n\n    db.collection(\"reviews\")\n      .add(newComment)\n      .then(() => {\n        setPosts([...posts, { ...newComment }]);\n        setComment(\"\");\n        setStars(\"\");\n      });\n  };\n\n  const getComment = () => {\n    db.collection(\"reviews\")\n      .get()\n      .then((data) => {\n        const array = [];\n        data.forEach((doc) => {\n          const obj = {\n            comment: doc.data().comment,\n            userName: doc.data().userName,\n            rating: doc.data().rating,\n            postedTime: doc.data().postedTime,\n          };\n          array.push(obj);\n        });\n        setPosts(array);\n      });\n  };\n\n  useEffect(() => {\n    getComment();\n  }, []);\n\n  return (\n    <div className=\"comment-section\">\n      <h1>Product reviews:</h1>\n      {posts.map((post) => (\n        <CommentSection\n          key={post.id}\n          name={post.userName}\n          comment={post.comment}\n          time={post.postedTime.toDate().toLocaleDateString(\"lt\")}\n          rating={post.rating}\n        />\n      ))}\n      {currentUser ? (\n        <div className=\"text\">\n          <textarea\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n            placeholder=\"Share your experience...\"\n          ></textarea>\n          <div className=\"rating\">\n            <ReactStars\n              count={5}\n              activeColor=\"#ffd700\"\n              edit={true}\n              onChange={(e) => setStars(e)}\n            ></ReactStars>\n          </div>\n        </div>\n      ) : null}\n      {currentUser ? (\n        <div className=\"comment-button\">\n          <button onClick={() => addComment()}>Submit</button>\n        </div>\n      ) : (\n        <div className=\"comment-button\">\n          <button onClick={() => history.push(\"/login\")}>Login first</button>\n        </div>\n      )}\n    </div>\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nexport default withRouter(connect(mapStateToProps)(Comment));\n"]},"metadata":{},"sourceType":"module"}