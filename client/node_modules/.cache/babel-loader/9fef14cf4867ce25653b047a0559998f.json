{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/src/components/common/navbar/navigation-bar/navigationBar.jsx\";\nimport React, { createRef } from \"react\";\nimport NavigationBarLink from \"../navigation-link/navigationBarLink\";\nimport { dropdownLinks } from \"../../../../helpers/dropdownLinks\";\nimport \"./navigation-bar.scss\";\n\nclass NavigationBar extends React.Component {\n  constructor() {\n    super();\n\n    this.closeDropdown = e => {\n      if (this.navigationBaref && !this.navigationBaref.current.contains(e.target)) {\n        this.setState({\n          navigationLinks: this.state.navigationLinks.map(el => {\n            return { ...el,\n              showMenu: false\n            };\n          })\n        });\n      }\n    };\n\n    this.handleCategoryChange = navLinkId => {\n      return categoryId => {\n        this.setState({\n          navigationLinks: this.state.navigationLinks.map(navLink => {\n            return { ...navLink,\n              categories: navLink.id === navLinkId ? navLink.categories.map(category => ({ ...category,\n                selected: category.id === categoryId\n              })) : navLink.categories\n            };\n          })\n        });\n      };\n    };\n\n    this.toggleDropdown = id => {\n      const linkIndex = this.state.navigationLinks.findIndex(el => el.id === id);\n      this.setState({\n        navigationLinks: this.state.navigationLinks.map((el, idx, arr) => {\n          return { ...el,\n            showMenu: el.id === id && !arr[idx].showMenu\n          };\n        })\n      });\n    };\n\n    this.state = {\n      dropd\n    };\n    this.navigationBaref = createRef();\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"click\", this.closeDropdown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"click\", this.closeDropdown);\n  }\n\n  render() {\n    const navigationBarLinks = this.state.navigationLinks.map(navLinkObj => /*#__PURE__*/React.createElement(NavigationBarLink, Object.assign({\n      key: navLinkObj.id\n    }, navLinkObj, (() => navLinkObj.categories ? {\n      handleChange: () => this.toggleDropdown(navLinkObj.id),\n      handleCategoryChange: this.handleCategoryChange(navLinkObj.id),\n      otherLinks: this.state.otherLinks\n    } : null)(), {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    })));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"navigation-bar\",\n      ref: this.navigationBaref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }\n    }, navigationBarLinks);\n  }\n\n}\n\nexport default NavigationBar;","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/src/components/common/navbar/navigation-bar/navigationBar.jsx"],"names":["React","createRef","NavigationBarLink","dropdownLinks","NavigationBar","Component","constructor","closeDropdown","e","navigationBaref","current","contains","target","setState","navigationLinks","state","map","el","showMenu","handleCategoryChange","navLinkId","categoryId","navLink","categories","id","category","selected","toggleDropdown","linkIndex","findIndex","idx","arr","dropd","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","navigationBarLinks","navLinkObj","handleChange","otherLinks"],"mappings":"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","sourcesContent":["import React, { createRef } from \"react\";\nimport NavigationBarLink from \"../navigation-link/navigationBarLink\";\n\nimport { dropdownLinks } from \"../../../../helpers/dropdownLinks\";\n\nimport \"./navigation-bar.scss\";\n\nclass NavigationBar extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      dropd\n    };\n    this.navigationBaref = createRef();\n  }\n\n  closeDropdown = (e) => {\n    if (\n      this.navigationBaref &&\n      !this.navigationBaref.current.contains(e.target)\n    ) {\n      this.setState({\n        navigationLinks: this.state.navigationLinks.map((el) => {\n          return {\n            ...el,\n            showMenu: false,\n          };\n        }),\n      });\n    }\n  };\n\n  handleCategoryChange = (navLinkId) => {\n    return (categoryId) => {\n      this.setState({\n        navigationLinks: this.state.navigationLinks.map((navLink) => {\n          return {\n            ...navLink,\n            categories:\n              navLink.id === navLinkId\n                ? navLink.categories.map((category) => ({\n                    ...category,\n                    selected: category.id === categoryId,\n                  }))\n                : navLink.categories,\n          };\n        }),\n      });\n    };\n  };\n\n  toggleDropdown = (id) => {\n    const linkIndex = this.state.navigationLinks.findIndex(\n      (el) => el.id === id\n    );\n    this.setState({\n      navigationLinks: this.state.navigationLinks.map((el, idx, arr) => {\n        return {\n          ...el,\n          showMenu: el.id === id && !arr[idx].showMenu,\n        };\n      }),\n    });\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"click\", this.closeDropdown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"click\", this.closeDropdown);\n  }\n\n  render() {\n    const navigationBarLinks = this.state.navigationLinks.map((navLinkObj) => (\n      <NavigationBarLink\n        key={navLinkObj.id}\n        {...navLinkObj}\n        {...(() =>\n          navLinkObj.categories\n            ? {\n                handleChange: () => this.toggleDropdown(navLinkObj.id),\n                handleCategoryChange: this.handleCategoryChange(navLinkObj.id),\n                otherLinks: this.state.otherLinks,\n              }\n            : null)()}\n      />\n    ));\n    return (\n      <div className=\"navigation-bar\" ref={this.navigationBaref}>\n        {navigationBarLinks}\n      </div>\n    );\n  }\n}\n\nexport default NavigationBar;\n"]},"metadata":{},"sourceType":"module"}