{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/src/pages/singleProduct/singleProduct.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./singleProduct.scss\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectPopularProductsCollections } from \"../../redux//popularProducts/popularProduct.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport CustomButton from \"../../components/common/customButton/customButton\";\nimport Spinner from \"../../components/common/spinner/spinner.component\";\nimport { addItem } from \"../../redux/cart/cartActions\";\nimport { firestore } from \"../../firebase/firebase\";\nimport { useParams } from \"react-router-dom\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\n\nimport { Carousel } from \"react-responsive-carousel\";\n\nconst SingleProduct = ({\n  addItem,\n  collections,\n  currentUser\n}) => {\n  const {\n    id\n  } = useParams();\n  const [photo, setPhoto] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [sizes, setSizes] = useState([]);\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [colors, setColors] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  let db = firestore.collection(\"allProducts\").doc(id);\n\n  const addProductToCart = () => {\n    db.get().then(data => {\n      setPhoto(data.data().imageUrl);\n      setName(data.data().name);\n      setPrice(data.data().price);\n      setText(data.data().text);\n      setSizes(data.data().size);\n      setColors(data.data().color);\n    }).then(() => {\n      setLoading(false);\n    });\n  };\n\n  const addComment = () => {\n    db.collection(\"reviews\").add({\n      comment: comment,\n      time: new Date(),\n      user: currentUser.displayName\n    }).then(() => alert(\"done\"));\n  };\n\n  const getComment = () => {\n    db.collection(\"reviews\").then(data => {\n      const array = [];\n      data.forEach(doc => {\n        let obj = {\n          comment: doc.data().comment,\n          userName: doc.data().user,\n          postedTime: doc.data().time\n        };\n        array.push(obj);\n      });\n      setPosts(array);\n    });\n  };\n\n  useEffect(() => {\n    addProductToCart();\n    getComment();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    isLoading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"single-product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    showArrows: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, photo.map(image => /*#__PURE__*/React.createElement(\"div\", {\n    key: image.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: \"slide-show picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: size,\n    onChange: e => setSize(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 15\n    }\n  }, \"Please select a size\"), sizes.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, item))), /*#__PURE__*/React.createElement(\"select\", {\n    value: color,\n    onChange: e => setColor(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, \"Please select a color\"), colors.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, item))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, \"Price: \\u20AC\", price), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => addItem({ ...collections.find(el => el.id === id),\n      selectedColor: color,\n      selectedSize: size\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"ADD TO CART\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, \"Product reviews:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    placeholder: \"Share your experience\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addComment(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectPopularProductsCollections,\n  currentUser: selectCurrentUser\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleProduct);","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/src/pages/singleProduct/singleProduct.component.jsx"],"names":["React","useEffect","useState","connect","createStructuredSelector","selectPopularProductsCollections","selectCurrentUser","CustomButton","Spinner","addItem","firestore","useParams","Carousel","SingleProduct","collections","currentUser","id","photo","setPhoto","name","setName","price","setPrice","text","setText","loading","setLoading","sizes","setSizes","size","setSize","color","setColor","colors","setColors","comment","setComment","posts","setPosts","db","collection","doc","addProductToCart","get","then","data","imageUrl","addComment","add","time","Date","user","displayName","alert","getComment","array","forEach","obj","userName","postedTime","push","map","image","e","target","value","item","find","el","selectedColor","selectedSize","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./singleProduct.scss\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectPopularProductsCollections } from \"../../redux//popularProducts/popularProduct.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\n\nimport CustomButton from \"../../components/common/customButton/customButton\";\nimport Spinner from \"../../components/common/spinner/spinner.component\";\n\nimport { addItem } from \"../../redux/cart/cartActions\";\n\nimport { firestore } from \"../../firebase/firebase\";\nimport { useParams } from \"react-router-dom\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from \"react-responsive-carousel\";\n\nconst SingleProduct = ({ addItem, collections, currentUser }) => {\n  const { id } = useParams();\n  const [photo, setPhoto] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [sizes, setSizes] = useState([]);\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [colors, setColors] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n\n  let db = firestore.collection(\"allProducts\").doc(id);\n\n  const addProductToCart = () => {\n    db.get()\n      .then((data) => {\n        setPhoto(data.data().imageUrl);\n        setName(data.data().name);\n        setPrice(data.data().price);\n        setText(data.data().text);\n        setSizes(data.data().size);\n        setColors(data.data().color);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  };\n\n  const addComment = () => {\n    db.collection(\"reviews\")\n      .add({\n        comment: comment,\n        time: new Date(),\n        user: currentUser.displayName,\n      })\n      .then(() => alert(\"done\"));\n  };\n\n  const getComment = () => {\n    db.collection(\"reviews\").then((data) => {\n      const array = [];\n      data.forEach((doc) => {\n        let obj = {\n          comment: doc.data().comment,\n          userName: doc.data().user,\n          postedTime: doc.data().time,\n        };\n        array.push(obj);\n      });\n      setPosts(array);\n    });\n  };\n\n  useEffect(() => {\n    addProductToCart();\n    getComment();\n  }, []);\n\n  return (\n    <div>\n      <Spinner isLoading={loading} />\n      <div className=\"single-product\">\n        <div className=\"photo\">\n          <Carousel showArrows={true}>\n            {photo.map((image) => (\n              <div key={image.id}>\n                <img src={image} alt=\"slide-show picture\" />\n              </div>\n            ))}\n          </Carousel>\n        </div>\n        <div className=\"product-details\">\n          <h1>{name}</h1>\n          <p>{text}</p>\n          <div className=\"product-size\">\n            <select value={size} onChange={(e) => setSize(e.target.value)}>\n              <option value=\"\">Please select a size</option>\n              {sizes.map((item) => (\n                <option value={item} key={item.id}>\n                  {item}\n                </option>\n              ))}\n            </select>\n            <select value={color} onChange={(e) => setColor(e.target.value)}>\n              <option value=\"\">Please select a color</option>\n              {colors.map((item) => (\n                <option value={item} key={item.id}>\n                  {item}\n                </option>\n              ))}\n            </select>\n\n            <h3>Price: &euro;{price}</h3>\n            <CustomButton\n              onClick={() =>\n                addItem({\n                  ...collections.find((el) => el.id === id),\n                  selectedColor: color,\n                  selectedSize: size,\n                })\n              }\n            >\n              ADD TO CART\n            </CustomButton>\n          </div>\n        </div>\n      </div>\n      <div className=\"comment-section\">\n        <h1>Product reviews:</h1>\n        {\n          \n        }\n        <div className=\"comment\"></div>\n        <div className=\"text\">\n          <textarea\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n            placeholder=\"Share your experience\"\n          ></textarea>\n        </div>\n        <div className=\"comment-button\">\n          <button onClick={() => addComment()}>Submit</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectPopularProductsCollections,\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleProduct);\n"]},"metadata":{},"sourceType":"module"}