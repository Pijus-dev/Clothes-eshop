{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/client/src/pages/orders/order.component.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { firestore } from \"../../firebase/firebase\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport \"./order.module.scss\";\n\nconst Order = () => {\n  var _currentUser$id;\n\n  const [order, setOrder] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const data = localStorage.getItem(\"persist:root\");\n  const currentUser = JSON.parse(JSON.parse(data).user).currentUser;\n  const userId = (_currentUser$id = currentUser.id) !== null && _currentUser$id !== void 0 ? _currentUser$id : currentUser.uid; // order.map((item) => {\n  //   console.log(item);\n  // });\n\n  const keys = Object.keys(order[0]);\n  console.log(order);\n\n  const getCartItems = () => {\n    firestore.collection(\"users\").doc(userId).collection(\"cartItems\").get().then(data => {\n      const array = [];\n      data.forEach(doc => {\n        const obj = {\n          name: doc.data().name,\n          quantity: doc.data().quantity,\n          price: doc.data().price,\n          color: doc.data().color,\n          size: doc.data().size\n        };\n        array.push(obj);\n      });\n      setOrder(array);\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    getCartItems();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styleMedia.orderPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"Order List\"));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\nexport default connect(mapStateToProps)(Order);","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/client/src/pages/orders/order.component.jsx"],"names":["React","useState","useEffect","firestore","selectCurrentUser","connect","createStructuredSelector","Order","order","setOrder","isLoading","setLoading","data","localStorage","getItem","currentUser","JSON","parse","user","userId","id","uid","keys","Object","console","log","getCartItems","collection","doc","get","then","array","forEach","obj","name","quantity","price","color","size","push","styleMedia","orderPage","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,SAAT,QAA0B,yBAA1B;AAEA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAO,qBAAP;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,SAAD,EAAYC,UAAZ,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAMW,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAb;AACA,QAAMC,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACC,KAAL,CAAWL,IAAX,EAAiBM,IAA5B,EAAkCH,WAAtD;AACA,QAAMI,MAAM,sBAAGJ,WAAW,CAACK,EAAf,6DAAqBL,WAAW,CAACM,GAA7C,CANkB,CAQlB;AACA;AACA;;AACA,QAAMC,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAYd,KAAK,CAAC,CAAD,CAAjB,CAAb;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;;AAEA,QAAMkB,YAAY,GAAG,MAAM;AACzBvB,IAAAA,SAAS,CACNwB,UADH,CACc,OADd,EAEGC,GAFH,CAEOT,MAFP,EAGGQ,UAHH,CAGc,WAHd,EAIGE,GAJH,GAKGC,IALH,CAKSlB,IAAD,IAAU;AACd,YAAMmB,KAAK,GAAG,EAAd;AACAnB,MAAAA,IAAI,CAACoB,OAAL,CAAcJ,GAAD,IAAS;AACpB,cAAMK,GAAG,GAAG;AACVC,UAAAA,IAAI,EAAEN,GAAG,CAAChB,IAAJ,GAAWsB,IADP;AAEVC,UAAAA,QAAQ,EAAEP,GAAG,CAAChB,IAAJ,GAAWuB,QAFX;AAGVC,UAAAA,KAAK,EAAER,GAAG,CAAChB,IAAJ,GAAWwB,KAHR;AAIVC,UAAAA,KAAK,EAAET,GAAG,CAAChB,IAAJ,GAAWyB,KAJR;AAKVC,UAAAA,IAAI,EAAEV,GAAG,CAAChB,IAAJ,GAAW0B;AALP,SAAZ;AAOAP,QAAAA,KAAK,CAACQ,IAAN,CAAWN,GAAX;AACD,OATD;AAUAxB,MAAAA,QAAQ,CAACsB,KAAD,CAAR;AACApB,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAnBH;AAoBD,GArBD;;AAuBAT,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAEc,UAAU,CAACC,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF;AAKD,CA9CD;;AAgDA,MAAMC,eAAe,GAAGpC,wBAAwB,CAAC;AAC/CS,EAAAA,WAAW,EAAEX;AADkC,CAAD,CAAhD;AAIA,eAAeC,OAAO,CAACqC,eAAD,CAAP,CAAyBnC,KAAzB,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { firestore } from \"../../firebase/firebase\";\n\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport \"./order.module.scss\";\n\n\nconst Order = () => {\n  const [order, setOrder] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n\n  const data = localStorage.getItem(\"persist:root\");\n  const currentUser = JSON.parse(JSON.parse(data).user).currentUser;\n  const userId = currentUser.id ?? currentUser.uid;\n\n  // order.map((item) => {\n  //   console.log(item);\n  // });\n  const keys = Object.keys(order[0]);\n  console.log(order);\n\n  const getCartItems = () => {\n    firestore\n      .collection(\"users\")\n      .doc(userId)\n      .collection(\"cartItems\")\n      .get()\n      .then((data) => {\n        const array = [];\n        data.forEach((doc) => {\n          const obj = {\n            name: doc.data().name,\n            quantity: doc.data().quantity,\n            price: doc.data().price,\n            color: doc.data().color,\n            size: doc.data().size,\n          };\n          array.push(obj);\n        });\n        setOrder(array);\n        setLoading(false);\n      });\n  };\n\n  useEffect(() => {\n    getCartItems();\n  }, []);\n\n  return (\n    <div className={styleMedia.orderPage}>\n      <h2>Order List</h2>\n    </div>\n  )\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps)(Order);\n"]},"metadata":{},"sourceType":"module"}