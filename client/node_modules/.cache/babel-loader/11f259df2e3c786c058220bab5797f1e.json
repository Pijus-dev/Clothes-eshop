{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/src/pages/singleProduct/singleProduct.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./singleProduct.scss\";\nimport { withRouter } from \"react-router-dom\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectPopularProductsCollections } from \"../../redux//popularProducts/popularProduct.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport CustomButton from \"../../components/common/customButton/customButton\";\nimport Spinner from \"../../components/common/spinner/spinner.component\";\nimport { Comment } from \"../../components/comment/comment.component\";\nimport { addItem } from \"../../redux/cart/cartActions\";\nimport { firestore, firebase } from \"../../firebase/firebase\";\nimport { useParams } from \"react-router-dom\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\n\nimport { Carousel } from \"react-responsive-carousel\";\n\nconst SingleProduct = ({\n  addItem,\n  collections,\n  history\n}) => {\n  const {\n    id\n  } = useParams();\n  const [photo, setPhoto] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [sizes, setSizes] = useState([]);\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [colors, setColors] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [stars, setStars] = useState(\"\");\n  let db = firestore.collection(\"allProducts\").doc(id);\n\n  const addProductToCart = () => {\n    db.get().then(data => {\n      setPhoto(data.data().imageUrl);\n      setName(data.data().name);\n      setPrice(data.data().price);\n      setText(data.data().text);\n      setSizes(data.data().size);\n      setColors(data.data().color);\n    }).then(() => {\n      setLoading(false);\n    });\n  }; // const addComment = () => {\n  //   const newComment = {\n  //     comment: comment,\n  //     postedTime: firebase.firestore.Timestamp.fromDate(new Date()),\n  //     userName: currentUser.displayName,\n  //     rating: stars,\n  //   };\n  //   db.collection(\"reviews\")\n  //     .add(newComment)\n  //     .then(() => {\n  //       setPosts([...posts, { ...newComment, id }]);\n  //       setComment(\"\");\n  //       setStars('');\n  //     });\n  // };\n  // const getComment = () => {\n  //   db.collection(\"reviews\")\n  //     .get()\n  //     .then((data) => {\n  //       const array = [];\n  //       data.forEach((doc) => {\n  //         const obj = {\n  //           comment: doc.data().comment,\n  //           userName: doc.data().userName,\n  //           rating: doc.data().rating,\n  //           postedTime: doc.data().postedTime,\n  //         };\n  //         array.push(obj);\n  //       });\n  //       setPosts(array);\n  //     });\n  // };\n\n\n  useEffect(() => {\n    addProductToCart(); // getComment();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    isLoading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"single-product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    showArrows: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, photo.map(image => /*#__PURE__*/React.createElement(\"div\", {\n    key: image.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: \"slide-show picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: size,\n    onChange: e => setSize(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"Please select a size\"), sizes.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, item))), /*#__PURE__*/React.createElement(\"select\", {\n    value: color,\n    onChange: e => setColor(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Please select a color\"), colors.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, item))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }, \"Price: \\u20AC\", price), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => addItem({ ...collections.find(el => el.id === id),\n      selectedColor: color,\n      selectedSize: size\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, \"ADD TO CART\")))), /*#__PURE__*/React.createElement(Comment, {\n    db: db,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectPopularProductsCollections\n});\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SingleProduct));","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/src/pages/singleProduct/singleProduct.component.jsx"],"names":["React","useEffect","useState","withRouter","ReactStars","connect","createStructuredSelector","selectPopularProductsCollections","selectCurrentUser","CustomButton","Spinner","Comment","addItem","firestore","firebase","useParams","Carousel","SingleProduct","collections","history","id","photo","setPhoto","name","setName","price","setPrice","text","setText","loading","setLoading","sizes","setSizes","size","setSize","color","setColor","colors","setColors","comment","setComment","posts","setPosts","stars","setStars","db","collection","doc","addProductToCart","get","then","data","imageUrl","map","image","e","target","value","item","find","el","selectedColor","selectedSize","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./singleProduct.scss\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport ReactStars from \"react-rating-stars-component\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectPopularProductsCollections } from \"../../redux//popularProducts/popularProduct.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\n\nimport CustomButton from \"../../components/common/customButton/customButton\";\nimport Spinner from \"../../components/common/spinner/spinner.component\";\nimport { Comment } from \"../../components/comment/comment.component\";\n\nimport { addItem } from \"../../redux/cart/cartActions\";\n\nimport { firestore, firebase } from \"../../firebase/firebase\";\nimport { useParams } from \"react-router-dom\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from \"react-responsive-carousel\";\n\nconst SingleProduct = ({ addItem, collections, history }) => {\n  const { id } = useParams();\n  const [photo, setPhoto] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [sizes, setSizes] = useState([]);\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [colors, setColors] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [stars, setStars] = useState(\"\");\n  let db = firestore.collection(\"allProducts\").doc(id);\n\n  const addProductToCart = () => {\n    db.get()\n      .then((data) => {\n        setPhoto(data.data().imageUrl);\n        setName(data.data().name);\n        setPrice(data.data().price);\n        setText(data.data().text);\n        setSizes(data.data().size);\n        setColors(data.data().color);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  };\n\n  // const addComment = () => {\n  //   const newComment = {\n  //     comment: comment,\n  //     postedTime: firebase.firestore.Timestamp.fromDate(new Date()),\n  //     userName: currentUser.displayName,\n  //     rating: stars,\n  //   };\n\n  //   db.collection(\"reviews\")\n  //     .add(newComment)\n  //     .then(() => {\n  //       setPosts([...posts, { ...newComment, id }]);\n  //       setComment(\"\");\n  //       setStars('');\n  //     });\n  // };\n\n  // const getComment = () => {\n  //   db.collection(\"reviews\")\n  //     .get()\n  //     .then((data) => {\n  //       const array = [];\n  //       data.forEach((doc) => {\n  //         const obj = {\n  //           comment: doc.data().comment,\n  //           userName: doc.data().userName,\n  //           rating: doc.data().rating,\n  //           postedTime: doc.data().postedTime,\n  //         };\n  //         array.push(obj);\n  //       });\n  //       setPosts(array);\n  //     });\n  // };\n\n  useEffect(() => {\n    addProductToCart();\n    // getComment();\n  }, []);\n\n  return (\n    <div>\n      <Spinner isLoading={loading} />\n      <div className=\"single-product\">\n        <div className=\"photo\">\n          <Carousel showArrows={true}>\n            {photo.map((image) => (\n              <div key={image.id}>\n                <img src={image} alt=\"slide-show picture\" />\n              </div>\n            ))}\n          </Carousel>\n        </div>\n        <div className=\"product-details\">\n          <h1>{name}</h1>\n          <p>{text}</p>\n          <div className=\"product-size\">\n            <select value={size} onChange={(e) => setSize(e.target.value)}>\n              <option value=\"\">Please select a size</option>\n              {sizes.map((item) => (\n                <option value={item} key={item.id}>\n                  {item}\n                </option>\n              ))}\n            </select>\n            <select value={color} onChange={(e) => setColor(e.target.value)}>\n              <option value=\"\">Please select a color</option>\n              {colors.map((item) => (\n                <option value={item} key={item.id}>\n                  {item}\n                </option>\n              ))}\n            </select>\n\n            <h3>Price: &euro;{price}</h3>\n            <CustomButton\n              onClick={() =>\n                addItem({\n                  ...collections.find((el) => el.id === id),\n                  selectedColor: color,\n                  selectedSize: size,\n                })\n              }\n            >\n              ADD TO CART\n            </CustomButton>\n          </div>\n        </div>\n      </div>\n      <Comment db={db} />\n      {/* <div className=\"comment-section\">\n        <h1>Product reviews:</h1>\n        {posts.map((post) => (\n          <CommentSection\n            name={post.userName}\n            comment={post.comment}\n            time={post.postedTime.toDate().toLocaleDateString(\"lt\")}\n            rating={post.rating}\n          />\n        ))}\n        {currentUser ? (\n          <div className=\"text\">\n            <textarea\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n              placeholder=\"Share your experience...\"\n            ></textarea>\n            <div className=\"rating\">\n              <ReactStars\n                count={5}\n                activeColor=\"#ffd700\"\n                edit={true}\n                onChange={(e) => setStars(e)}\n              ></ReactStars>\n            </div>\n          </div>\n        ) : null}\n        {currentUser ? (\n          <div className=\"comment-button\">\n            <button onClick={() => addComment()}>Submit</button>\n          </div>\n        ) : (\n          <div className=\"comment-button\">\n            <button onClick={() => history.push(\"/login\")}>Login first</button>\n          </div>\n        )}\n      </div> */}\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectPopularProductsCollections,\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(SingleProduct)\n);\n"]},"metadata":{},"sourceType":"module"}