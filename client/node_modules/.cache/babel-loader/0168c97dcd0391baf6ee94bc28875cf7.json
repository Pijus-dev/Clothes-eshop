{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/src/components/common/navbar/searchBar/searchBar.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./searchBar.scss\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { setSearchText } from \"../../../../redux/searchQuery/searchQuery.actions\";\nimport { selectSearchQuery } from \"../../../../redux/searchQuery/searchQuery.selector\";\n\nconst SearchBar = ({\n  searchText,\n  searchValue\n}) => {\n  // const filterCollections = () => {\n  //   collections.filter((value) => {\n  //     return value.name.toLowerCase().includes(searchText.toLowerCase());\n  //   });\n  // };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaSearch, {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"search for products\",\n    value: search,\n    onChange: e => searchValue(setSearch(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  searchValue: text => dispatch(setSearchText(text))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  searchText: selectSearchQuery\n});\nexport default connect(null, mapDispatchToProps)(SearchBar);","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/src/components/common/navbar/searchBar/searchBar.jsx"],"names":["React","useState","useEffect","FaSearch","connect","createStructuredSelector","setSearchText","selectSearchQuery","SearchBar","searchText","searchValue","search","e","setSearch","target","value","mapDispatchToProps","dispatch","text","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,kBAAP;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,SAASC,aAAT,QAA8B,mDAA9B;AACA,SAASC,iBAAT,QAAkC,oDAAlC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAiC;AACjD;AACA;AACA;AACA;AACA;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,qBAFd;AAGE,IAAA,KAAK,EAAEC,MAHT;AAIE,IAAA,QAAQ,EAAGC,CAAD,IAAOF,WAAW,CAACG,SAAS,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF;AAcD,CArBD;;AAuBA,MAAMC,kBAAkB,GAAIC,QAAD,KAAe;AACxCP,EAAAA,WAAW,EAAGQ,IAAD,IAAUD,QAAQ,CAACX,aAAa,CAACY,IAAD,CAAd;AADS,CAAf,CAA3B;;AAIA,MAAMC,eAAe,GAAGd,wBAAwB,CAAC;AAC/CI,EAAAA,UAAU,EAAEF;AADmC,CAAD,CAAhD;AAIA,eAAeH,OAAO,CAAC,IAAD,EAAOY,kBAAP,CAAP,CAAkCR,SAAlC,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./searchBar.scss\";\n\nimport { FaSearch } from \"react-icons/fa\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { setSearchText } from \"../../../../redux/searchQuery/searchQuery.actions\";\nimport { selectSearchQuery } from \"../../../../redux/searchQuery/searchQuery.selector\";\n\nconst SearchBar = ({ searchText, searchValue }) => {\n  // const filterCollections = () => {\n  //   collections.filter((value) => {\n  //     return value.name.toLowerCase().includes(searchText.toLowerCase());\n  //   });\n  // };\n\n  return (\n    <div className=\"search\">\n      <div className=\"search-group\">\n        <FaSearch className=\"icon\" />\n        <input\n          type=\"text\"\n          placeholder=\"search for products\"\n          value={search}\n          onChange={(e) => searchValue(setSearch(e.target.value))}\n        />\n        {/* {searchText ? <div className=\"delete\">&#10005;</div> : null} */}\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  searchValue: (text) => dispatch(setSearchText(text)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  searchText: selectSearchQuery,\n});\n\nexport default connect(null, mapDispatchToProps)(SearchBar);\n"]},"metadata":{},"sourceType":"module"}