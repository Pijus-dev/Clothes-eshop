{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBoOSBkJan9g7tcaj9DXQJEboClBJrBdDk\",\n  authDomain: \"react-shop-a5bdd.firebaseapp.com\",\n  databaseURL: \"https://react-shop-a5bdd.firebaseio.com\",\n  projectId: \"react-shop-a5bdd\",\n  storageBucket: \"react-shop-a5bdd.appspot.com\",\n  messagingSenderId: \"76107538522\",\n  appId: \"1:76107538522:web:4dda95f69443880f21b863\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig); // creating an user account in the firestore\n\nexport const createUserProfile = async (userAuth, addInfo) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...addInfo\n      });\n    } catch (error) {}\n  }\n\n  return userRef;\n};\nexport const getPopularProducts = callback => {\n  const array = [];\n  firebase.firestore().collection(\"allProducts\").get().then(data => {\n    data.forEach(doc => {\n      const obj = {\n        id: doc.id,\n        name: doc.data().name,\n        price: doc.data().price,\n        imageUrl: doc.data().imageUrl\n      };\n      array.push(obj);\n    });\n    callback(array);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); // using google auth to sign in the user\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/src/firebase/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","createUserProfile","userAuth","addInfo","userRef","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","getPopularProducts","callback","array","collection","then","data","forEach","obj","id","name","price","imageUrl","push","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,IAAIC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,kCAFO;AAGnBC,EAAAA,WAAW,EAAE,yCAHM;AAInBC,EAAAA,SAAS,EAAE,kBAJQ;AAKnBC,EAAAA,aAAa,EAAE,8BALI;AAMnBC,EAAAA,iBAAiB,EAAE,aANA;AAOnBC,EAAAA,KAAK,EAAE;AAPY,CAArB,C,CASA;;AACAR,QAAQ,CAACS,aAAT,CAAuBR,cAAvB,E,CAEA;;AACA,OAAO,MAAMS,iBAAiB,GAAG,OAAOC,QAAP,EAAiBC,OAAjB,KAA6B;AAC5D,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,QAA/B;AACA,UAAMW,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,SAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc,CAAE;AACnB;;AACD,SAAOZ,OAAP;AACD,CArBM;AAuBP,OAAO,MAAMa,kBAAkB,GAAIC,QAAD,IAAc;AAC9C,QAAMC,KAAK,GAAG,EAAd;AACA5B,EAAAA,QAAQ,CACLc,SADH,GAEGe,UAFH,CAEc,aAFd,EAGGX,GAHH,GAIGY,IAJH,CAISC,IAAD,IAAU;AACdA,IAAAA,IAAI,CAACC,OAAL,CAAcjB,GAAD,IAAS;AACpB,YAAMkB,GAAG,GAAG;AACVC,QAAAA,EAAE,EAAEnB,GAAG,CAACmB,EADE;AAEVC,QAAAA,IAAI,EAAEpB,GAAG,CAACgB,IAAJ,GAAWI,IAFP;AAGVC,QAAAA,KAAK,EAAErB,GAAG,CAACgB,IAAJ,GAAWK,KAHR;AAIVC,QAAAA,QAAQ,EAAEtB,GAAG,CAACgB,IAAJ,GAAWM;AAJX,OAAZ;AAMAT,MAAAA,KAAK,CAACU,IAAN,CAAWL,GAAX;AACD,KARD;AASAN,IAAAA,QAAQ,CAACC,KAAD,CAAR;AACD,GAfH;AAgBD,CAlBM;AAoBP,OAAO,MAAMW,IAAI,GAAGvC,QAAQ,CAACuC,IAAT,EAAb;AACP,OAAO,MAAMzB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB,C,CAEP;;AACA,MAAM0B,QAAQ,GAAG,IAAIxC,QAAQ,CAACuC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAexC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBoOSBkJan9g7tcaj9DXQJEboClBJrBdDk\",\n  authDomain: \"react-shop-a5bdd.firebaseapp.com\",\n  databaseURL: \"https://react-shop-a5bdd.firebaseio.com\",\n  projectId: \"react-shop-a5bdd\",\n  storageBucket: \"react-shop-a5bdd.appspot.com\",\n  messagingSenderId: \"76107538522\",\n  appId: \"1:76107538522:web:4dda95f69443880f21b863\",\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// creating an user account in the firestore\nexport const createUserProfile = async (userAuth, addInfo) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...addInfo,\n      });\n    } catch (error) {}\n  }\n  return userRef;\n};\n\nexport const getPopularProducts = (callback) => {\n  const array = [];\n  firebase\n    .firestore()\n    .collection(\"allProducts\")\n    .get()\n    .then((data) => {\n      data.forEach((doc) => {\n        const obj = {\n          id: doc.id,\n          name: doc.data().name,\n          price: doc.data().price,\n          imageUrl: doc.data().imageUrl,\n        };\n        array.push(obj);\n      });\n      callback(array)\n    });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n// using google auth to sign in the user\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}