{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/src/pages/singleProduct/singleProduct.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./singleProduct.scss\";\nimport { withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectPopularProductsCollections } from \"../../redux//popularProducts/popularProduct.selector\";\nimport CustomButton from \"../../components/common/customButton/customButton\";\nimport Spinner from \"../../components/common/spinner/spinner.component\";\nimport Comment from \"../../components/comment/comment.component\";\nimport ProductDetails from \"../../components/product-details/product-details.component\";\nimport { addItem } from \"../../redux/cart/cartActions\";\nimport { firestore, firebase } from \"../../firebase/firebase\";\nimport { useParams } from \"react-router-dom\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\n\nimport { Carousel } from \"react-responsive-carousel\";\n\nconst SingleProduct = () => {\n  const {\n    id\n  } = useParams();\n  const [photo, setPhoto] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [sizes, setSizes] = useState([]);\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [colors, setColors] = useState([]);\n  let db = firestore.collection(\"allProducts\").doc(id); // const addProductToCart = () => {\n  //   db.get()\n  //     .then((data) => {\n  //       setPhoto(data.data().imageUrl);\n  //       setName(data.data().name);\n  //       setPrice(data.data().price);\n  //       setText(data.data().text);\n  //       setSizes(data.data().size);\n  //       setColors(data.data().color);\n  //     })\n  //     .then(() => {\n  //       setLoading(false);\n  //     });\n  // };\n  // useEffect(() => {\n  //   addProductToCart();\n  // }, []);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ProductDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Comment, {\n    db: db,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }));\n}; // const mapDispatchToProps = (dispatch) => ({\n//   addItem: (item) => dispatch(addItem(item)),\n// });\n// const mapStateToProps = createStructuredSelector({\n//   collections: selectPopularProductsCollections,\n// });\n// export default withRouter(\n//   connect(mapStateToProps, mapDispatchToProps)(SingleProduct)\n// );\n\n\nexport default SingleProduct;","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/src/pages/singleProduct/singleProduct.component.jsx"],"names":["React","useEffect","useState","withRouter","connect","createStructuredSelector","selectPopularProductsCollections","CustomButton","Spinner","Comment","ProductDetails","addItem","firestore","firebase","useParams","Carousel","SingleProduct","id","photo","setPhoto","name","setName","price","setPrice","text","setText","loading","setLoading","sizes","setSizes","size","setSize","color","setColor","colors","setColors","db","collection","doc"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,sBAAP;AAEA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,gCAAT,QAAiD,sDAAjD;AAEA,OAAOC,YAAP,MAAyB,mDAAzB;AACA,OAAOC,OAAP,MAAoB,mDAApB;AACA,OAAQC,OAAR,MAAsB,4CAAtB;AACA,OAAOC,cAAP,MAA2B,4DAA3B;AAEA,SAASC,OAAT,QAAwB,8BAAxB;AAEA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,yBAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,OAAO,uDAAP,C,CAAgE;;AAChE,SAASC,QAAT,QAAyB,2BAAzB;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACsB,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACwB,OAAD,EAAUC,UAAV,IAAwBzB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAAC0B,KAAD,EAAQC,QAAR,IAAoB3B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC4B,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAAC8B,KAAD,EAAQC,QAAR,IAAoB/B,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgC,MAAD,EAASC,SAAT,IAAsBjC,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIkC,EAAE,GAAGxB,SAAS,CAACyB,UAAV,CAAqB,aAArB,EAAoCC,GAApC,CAAwCrB,EAAxC,CAAT,CAX0B,CAa1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAiDE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAEmB,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,CADF;AAqDD,CArFD,C,CAuFA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;AACA,eAAepB,aAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./singleProduct.scss\";\n\nimport { withRouter } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectPopularProductsCollections } from \"../../redux//popularProducts/popularProduct.selector\";\n\nimport CustomButton from \"../../components/common/customButton/customButton\";\nimport Spinner from \"../../components/common/spinner/spinner.component\";\nimport  Comment  from \"../../components/comment/comment.component\";\nimport ProductDetails from \"../../components/product-details/product-details.component\";\n\nimport { addItem } from \"../../redux/cart/cartActions\";\n\nimport { firestore, firebase } from \"../../firebase/firebase\";\nimport { useParams } from \"react-router-dom\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from \"react-responsive-carousel\";\n\nconst SingleProduct = () => {\n  const { id } = useParams();\n  const [photo, setPhoto] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [sizes, setSizes] = useState([]);\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [colors, setColors] = useState([]);\n  let db = firestore.collection(\"allProducts\").doc(id);\n\n  // const addProductToCart = () => {\n  //   db.get()\n  //     .then((data) => {\n  //       setPhoto(data.data().imageUrl);\n  //       setName(data.data().name);\n  //       setPrice(data.data().price);\n  //       setText(data.data().text);\n  //       setSizes(data.data().size);\n  //       setColors(data.data().color);\n  //     })\n  //     .then(() => {\n  //       setLoading(false);\n  //     });\n  // };\n\n  // useEffect(() => {\n  //   addProductToCart();\n  // }, []);\n\n  return (\n    <div>\n      <ProductDetails />\n      {/* <Spinner isLoading={loading} />\n      <div className=\"single-product\">\n        <div className=\"photo\">\n          <Carousel showArrows={true}>\n            {photo.map((image) => (\n              <div key={image.id}>\n                <img src={image} alt=\"slide-show picture\" />\n              </div>\n            ))}\n          </Carousel>\n        </div>\n        <div className=\"product-details\">\n          <h1>{name}</h1>\n          <p>{text}</p>\n          <div className=\"product-size\">\n            <select value={size} onChange={(e) => setSize(e.target.value)}>\n              <option value=\"\">Please select a size</option>\n              {sizes.map((item) => (\n                <option value={item} key={item.id}>\n                  {item}\n                </option>\n              ))}\n            </select>\n            <select value={color} onChange={(e) => setColor(e.target.value)}>\n              <option value=\"\">Please select a color</option>\n              {colors.map((item) => (\n                <option value={item} key={item.id}>\n                  {item}\n                </option>\n              ))}\n            </select>\n\n            <h3>Price: &euro;{price}</h3>\n            <CustomButton\n              onClick={() =>\n                addItem({\n                  ...collections.find((el) => el.id === id),\n                  selectedColor: color,\n                  selectedSize: size,\n                })\n              }\n            >\n              ADD TO CART\n            </CustomButton>\n          </div>\n        </div>\n      </div> */}\n      <Comment db={db} />\n    </div>\n  );\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//   addItem: (item) => dispatch(addItem(item)),\n// });\n\n// const mapStateToProps = createStructuredSelector({\n//   collections: selectPopularProductsCollections,\n// });\n\n// export default withRouter(\n//   connect(mapStateToProps, mapDispatchToProps)(SingleProduct)\n// );\nexport default SingleProduct;\n"]},"metadata":{},"sourceType":"module"}