{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/client/src/components/common/stripeButton/stripButton.component.jsx\";\nimport React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport axios from \"axios\";\nimport swal from \"sweetalert\";\nimport { withRouter } from \"react-router-dom\";\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { selectCartItems } from \"../../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\nimport { firestore } from \"../../../firebase/firebase\";\nimport { clearAllItems } from \"../../../redux/cart/cartActions\";\n\nconst StripeCheckoutButton = ({\n  price,\n  history,\n  currentUser,\n  dispatch,\n  cartItems\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_i28ouERO9Dli1OlxDdGM7HFA00hCEjnkrw\";\n  let quantity;\n  quantity = cartItems.map(item => {\n    return item.quantity + \"x\" + item.name + item.selectedColor + item.selectedSize;\n  });\n  const itemsToAdd = cartItems.map(item => {\n    return {\n      name: item.name,\n      price: item.price,\n      quantity: item.quantity\n    };\n  }).reduce((largeObject, el, i) => {\n    largeObject[i] = el;\n    return largeObject;\n  }, {});\n  console.log(currentUser.id);\n\n  const addCartItems = () => {\n    firestore.collection(\"users\").doc(currentUser.id).collection(\"cartItems\").add(itemsToAdd).then(alert(\"done\")).catch(e => console.dir(e));\n  };\n\n  addCartItems();\n\n  const onToken = token => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token,\n        order: quantity.toString()\n      }\n    }).then(repsonse => {\n      swal(\"YESS !!\", \"Payment was successful\", \"success\");\n      history.push(\"/shipment\");\n      dispatch(clearAllItems());\n      localStorage.clear();\n    }).catch(error => {\n      swal(\"OOPS!!\", \"There was an issue with your payment\", \"error\");\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"PAY NOW\",\n    name: \"Clothes Shop\",\n    billingAddress: true,\n    email: currentUser.email,\n    shippingAddress: true,\n    image: \"https://sendeyo.com/up/d/f3eb2117da\",\n    description: `Your total price is €${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  });\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(StripeCheckoutButton));","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/client/src/components/common/stripeButton/stripButton.component.jsx"],"names":["React","StripeCheckout","axios","swal","withRouter","selectCurrentUser","selectCartItems","createStructuredSelector","connect","firestore","clearAllItems","StripeCheckoutButton","price","history","currentUser","dispatch","cartItems","priceForStripe","publishableKey","quantity","map","item","name","selectedColor","selectedSize","itemsToAdd","reduce","largeObject","el","i","console","log","id","addCartItems","collection","doc","add","then","alert","catch","e","dir","onToken","token","url","method","data","amount","order","toString","repsonse","push","localStorage","clear","error","email","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nimport StripeCheckout from \"react-stripe-checkout\";\n\nimport axios from \"axios\";\n\nimport swal from \"sweetalert\";\nimport { withRouter } from \"react-router-dom\";\n\nimport { selectCurrentUser } from \"../../../redux/user/user.selectors\";\nimport { selectCartItems } from \"../../../redux/cart/cart.selectors\";\nimport { createStructuredSelector } from \"reselect\";\nimport { connect } from \"react-redux\";\n\nimport { firestore } from \"../../../firebase/firebase\";\n\nimport { clearAllItems } from \"../../../redux/cart/cartActions\";\n\nconst StripeCheckoutButton = ({\n  price,\n  history,\n  currentUser,\n  dispatch,\n  cartItems,\n}) => {\n  const priceForStripe = price * 100;\n  const publishableKey = \"pk_test_i28ouERO9Dli1OlxDdGM7HFA00hCEjnkrw\";\n\n  let quantity;\n  quantity = cartItems.map((item) => {\n    return (\n      item.quantity + \"x\" + item.name + item.selectedColor + item.selectedSize\n    );\n  });\n\n  const itemsToAdd = cartItems\n    .map((item) => {\n      return {\n        name: item.name,\n        price: item.price,\n        quantity: item.quantity,\n      };\n    })\n    .reduce((largeObject, el, i) => {\n      largeObject[i] = el;\n      return largeObject;\n    }, {});\n\n    console.log(currentUser.id)\n  const addCartItems = () => {\n    firestore\n      .collection(\"users\")\n      .doc(currentUser.id)\n      .collection(\"cartItems\")\n      .add(itemsToAdd)\n      .then(alert(\"done\"))\n      .catch((e) => console.dir(e));\n  };\n\n  addCartItems();\n\n  const onToken = (token) => {\n    axios({\n      url: \"payment\",\n      method: \"post\",\n      data: {\n        amount: priceForStripe,\n        token,\n        order: quantity.toString(),\n      },\n    })\n      .then((repsonse) => {\n        swal(\"YESS !!\", \"Payment was successful\", \"success\");\n        history.push(\"/shipment\");\n        dispatch(clearAllItems());\n        localStorage.clear();\n      })\n      .catch((error) => {\n        swal(\"OOPS!!\", \"There was an issue with your payment\", \"error\");\n      });\n  };\n\n  return (\n    <StripeCheckout\n      label=\"PAY NOW\"\n      name=\"Clothes Shop\"\n      billingAddress\n      email={currentUser.email}\n      shippingAddress\n      image=\"https://sendeyo.com/up/d/f3eb2117da\"\n      description={`Your total price is €${price}`}\n      amount={priceForStripe}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n  cartItems: selectCartItems,\n});\n\nexport default withRouter(connect(mapStateToProps)(StripeCheckoutButton));\n"]},"metadata":{},"sourceType":"module"}