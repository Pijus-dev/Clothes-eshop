{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/src/pages/singleProduct/singleProduct.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./singleProduct.scss\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectPopularProductsCollections } from \"../../redux//popularProducts/popularProduct.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\nimport CustomButton from \"../../components/common/customButton/customButton\";\nimport Spinner from \"../../components/common/spinner/spinner.component\";\nimport CommentSection from \"../../components/common/ comment-section/commentSection\";\nimport { addItem } from \"../../redux/cart/cartActions\";\nimport { firestore, firebase } from \"../../firebase/firebase\";\nimport { useParams } from \"react-router-dom\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\n\nimport { Carousel } from \"react-responsive-carousel\";\n\nconst SingleProduct = ({\n  addItem,\n  collections,\n  currentUser\n}) => {\n  const {\n    id\n  } = useParams();\n  const [photo, setPhoto] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [sizes, setSizes] = useState([]);\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [colors, setColors] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [stars, setStars] = useState(\"\");\n  let db = firestore.collection(\"allProducts\").doc(id);\n  console.log(posts);\n\n  const addProductToCart = () => {\n    db.get().then(data => {\n      setPhoto(data.data().imageUrl);\n      setName(data.data().name);\n      setPrice(data.data().price);\n      setText(data.data().text);\n      setSizes(data.data().size);\n      setColors(data.data().color);\n    }).then(() => {\n      setLoading(false);\n    });\n  };\n\n  const addComment = () => {\n    db.collection(\"reviews\").add({\n      comment: comment,\n      time: firebase.firestore.Timestamp.fromDate(new Date()),\n      user: currentUser.displayName\n    }).then(() => alert(\"done\"));\n  };\n\n  const getComment = () => {\n    db.collection(\"reviews\").get().then(data => {\n      const array = [];\n      data.forEach(doc => {\n        const obj = {\n          comment: doc.data().comment,\n          userName: doc.data().user,\n          postedTime: doc.data().time.toDate().toLocaleDateString()\n        };\n        array.push(obj);\n      });\n      setPosts(array);\n    });\n  };\n\n  useEffect(() => {\n    addProductToCart();\n    getComment();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    isLoading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"single-product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Carousel, {\n    showArrows: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, photo.map(image => /*#__PURE__*/React.createElement(\"div\", {\n    key: image.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: \"slide-show picture\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"product-size\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    value: size,\n    onChange: e => setSize(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, \"Please select a size\"), sizes.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, item))), /*#__PURE__*/React.createElement(\"select\", {\n    value: color,\n    onChange: e => setColor(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 15\n    }\n  }, \"Please select a color\"), colors.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    value: item,\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, item))), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Price: \\u20AC\", price), /*#__PURE__*/React.createElement(CustomButton, {\n    onClick: () => addItem({ ...collections.find(el => el.id === id),\n      selectedColor: color,\n      selectedSize: size\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"ADD TO CART\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, \"Product reviews:\"), posts.map(post => /*#__PURE__*/React.createElement(CommentSection, {\n    name: post.userName,\n    comment: post.comment,\n    postedTime: post.postedTime,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    placeholder: \"Share your experience...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ReactStars, {\n    count: 5,\n    activeColor: \"#ffd700\",\n    edit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => addComment(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectPopularProductsCollections,\n  currentUser: selectCurrentUser\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleProduct);","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/src/pages/singleProduct/singleProduct.component.jsx"],"names":["React","useEffect","useState","ReactStars","connect","createStructuredSelector","selectPopularProductsCollections","selectCurrentUser","CustomButton","Spinner","CommentSection","addItem","firestore","firebase","useParams","Carousel","SingleProduct","collections","currentUser","id","photo","setPhoto","name","setName","price","setPrice","text","setText","loading","setLoading","sizes","setSizes","size","setSize","color","setColor","colors","setColors","comment","setComment","posts","setPosts","stars","setStars","db","collection","doc","console","log","addProductToCart","get","then","data","imageUrl","addComment","add","time","Timestamp","fromDate","Date","user","displayName","alert","getComment","array","forEach","obj","userName","postedTime","toDate","toLocaleDateString","push","map","image","e","target","value","item","find","el","selectedColor","selectedSize","post","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./singleProduct.scss\";\n\nimport ReactStars from \"react-rating-stars-component\";\n\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectPopularProductsCollections } from \"../../redux//popularProducts/popularProduct.selector\";\nimport { selectCurrentUser } from \"../../redux/user/user.selectors\";\n\nimport CustomButton from \"../../components/common/customButton/customButton\";\nimport Spinner from \"../../components/common/spinner/spinner.component\";\nimport CommentSection from \"../../components/common/ comment-section/commentSection\";\n\nimport { addItem } from \"../../redux/cart/cartActions\";\n\nimport { firestore, firebase } from \"../../firebase/firebase\";\nimport { useParams } from \"react-router-dom\";\n\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\"; // requires a loader\nimport { Carousel } from \"react-responsive-carousel\";\n\nconst SingleProduct = ({ addItem, collections, currentUser }) => {\n  const { id } = useParams();\n  const [photo, setPhoto] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [sizes, setSizes] = useState([]);\n  const [size, setSize] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [colors, setColors] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  const [posts, setPosts] = useState([]);\n  const [stars, setStars] = useState(\"\");\n  let db = firestore.collection(\"allProducts\").doc(id);\n\n  console.log(posts);\n\n  const addProductToCart = () => {\n    db.get()\n      .then((data) => {\n        setPhoto(data.data().imageUrl);\n        setName(data.data().name);\n        setPrice(data.data().price);\n        setText(data.data().text);\n        setSizes(data.data().size);\n        setColors(data.data().color);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  };\n\n  const addComment = () => {\n    db.collection(\"reviews\")\n      .add({\n        comment: comment,\n        time: firebase.firestore.Timestamp.fromDate(new Date()),\n        user: currentUser.displayName,\n      })\n      .then(() => alert(\"done\"));\n  };\n\n  const getComment = () => {\n    db.collection(\"reviews\")\n      .get()\n      .then((data) => {\n        const array = [];\n        data.forEach((doc) => {\n          const obj = {\n            comment: doc.data().comment,\n            userName: doc.data().user,\n            postedTime: doc.data().time.toDate().toLocaleDateString(),\n          };\n          array.push(obj);\n        });\n        setPosts(array);\n      });\n  };\n\n  useEffect(() => {\n    addProductToCart();\n    getComment();\n  }, []);\n\n  return (\n    <div>\n      <Spinner isLoading={loading} />\n      <div className=\"single-product\">\n        <div className=\"photo\">\n          <Carousel showArrows={true}>\n            {photo.map((image) => (\n              <div key={image.id}>\n                <img src={image} alt=\"slide-show picture\" />\n              </div>\n            ))}\n          </Carousel>\n        </div>\n        <div className=\"product-details\">\n          <h1>{name}</h1>\n          <p>{text}</p>\n          <div className=\"product-size\">\n            <select value={size} onChange={(e) => setSize(e.target.value)}>\n              <option value=\"\">Please select a size</option>\n              {sizes.map((item) => (\n                <option value={item} key={item.id}>\n                  {item}\n                </option>\n              ))}\n            </select>\n            <select value={color} onChange={(e) => setColor(e.target.value)}>\n              <option value=\"\">Please select a color</option>\n              {colors.map((item) => (\n                <option value={item} key={item.id}>\n                  {item}\n                </option>\n              ))}\n            </select>\n\n            <h3>Price: &euro;{price}</h3>\n            <CustomButton\n              onClick={() =>\n                addItem({\n                  ...collections.find((el) => el.id === id),\n                  selectedColor: color,\n                  selectedSize: size,\n                })\n              }\n            >\n              ADD TO CART\n            </CustomButton>\n          </div>\n        </div>\n      </div>\n      <div className=\"comment-section\">\n        <h1>Product reviews:</h1>\n        {posts.map((post) => (\n          <CommentSection\n            name={post.userName}\n            comment={post.comment}\n            postedTime={post.postedTime}\n          />\n        ))}\n        <div className=\"text\">\n          <textarea\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n            placeholder=\"Share your experience...\"\n          ></textarea>\n          \n          <ReactStars count={5} activeColor=\"#ffd700\" edit={true}></ReactStars>\n        </div>\n        <div className=\"comment-button\">\n          <button onClick={() => addComment()}>Submit</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addItem: (item) => dispatch(addItem(item)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  collections: selectPopularProductsCollections,\n  currentUser: selectCurrentUser,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SingleProduct);\n"]},"metadata":{},"sourceType":"module"}