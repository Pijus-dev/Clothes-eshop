{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/REACT/pamoka/client/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { useParams } from \"react-router-dom\";\nimport { firestore, createProductObject } from \"../../firebase/firebase\";\nimport { popularProductsCollections } from \"../../redux/popularProducts/popularProducts.action\";\nimport { selectSearchQuery } from \"../../redux/searchQuery/searchQuery.selector\";\nimport Product from \"../../components/products/product.component\";\nimport Spinner from \"../../components/common/spinner/spinner.component\";\nimport styles from \"./shop.module.scss\";\n\nconst Shop = ({\n  popularProductsCollections,\n  searchValue\n}) => {\n  const {\n    category,\n    sex,\n    subcategory\n  } = useParams();\n  const [products, setProducts] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [spinner, setSpinner] = useState(true);\n\n  const queryProducts = () => {\n    let collection = firestore.collection(\"allProducts\");\n    if (sex) collection = collection.where(\"sexCategory\", \"==\", sex);\n    if (category) collection = collection.where(\"mainCategory\", \"==\", category);\n    if (subcategory) collection = collection.where(\"subCategory\", \"==\", subcategory);\n    collection.get().then(data => {\n      const array = [];\n      data.forEach(doc => {\n        array.push(obj);\n      });\n      setProducts(array);\n      popularProductsCollections(array);\n      setLoading(false);\n    }).then(() => {\n      setSpinner(false);\n    });\n  };\n\n  const filteredProducts = products.filter(product => {\n    return product.name.toLowerCase().includes(searchValue.toLowerCase());\n  });\n  useEffect(() => {\n    queryProducts();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Spinner, {\n    isLoading: spinner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.filteredProducts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, subcategory ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, subcategory.toUpperCase()) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"All Clothes\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.productsGrid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, isLoading ? null : filteredProducts.map(item => /*#__PURE__*/React.createElement(Product, {\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  })))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  popularProductsCollections: collection => dispatch(popularProductsCollections(collection))\n});\n\nconst mapStateToProps = createStructuredSelector({\n  searchValue: selectSearchQuery\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/user/Desktop/REACT/pamoka/client/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","useState","connect","createStructuredSelector","useParams","firestore","createProductObject","popularProductsCollections","selectSearchQuery","Product","Spinner","styles","Shop","searchValue","category","sex","subcategory","products","setProducts","isLoading","setLoading","spinner","setSpinner","queryProducts","collection","where","get","then","data","array","forEach","doc","push","obj","filteredProducts","filter","product","name","toLowerCase","includes","toUpperCase","productsGrid","map","item","id","mapDispatchToProps","dispatch","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\n\nimport { useParams } from \"react-router-dom\";\nimport { firestore, createProductObject } from \"../../firebase/firebase\";\n\nimport { popularProductsCollections } from \"../../redux/popularProducts/popularProducts.action\";\n\nimport { selectSearchQuery } from \"../../redux/searchQuery/searchQuery.selector\";\n\nimport Product from \"../../components/products/product.component\";\nimport Spinner from \"../../components/common/spinner/spinner.component\";\n\nimport styles from \"./shop.module.scss\";\n\nconst Shop = ({ popularProductsCollections, searchValue }) => {\n  const { category, sex, subcategory } = useParams();\n  const [products, setProducts] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [spinner, setSpinner] = useState(true);\n\n  const queryProducts = () => {\n    let collection = firestore.collection(\"allProducts\");\n\n    if (sex) collection = collection.where(\"sexCategory\", \"==\", sex);\n    if (category) collection = collection.where(\"mainCategory\", \"==\", category);\n    if (subcategory)\n      collection = collection.where(\"subCategory\", \"==\", subcategory);\n    collection\n      .get()\n      .then((data) => {\n        const array = [];\n        data.forEach((doc) => {\n          array.push(obj);\n        });\n        setProducts(array);\n        popularProductsCollections(array);\n        setLoading(false);\n      })\n      .then(() => {\n        setSpinner(false);\n      });\n  };\n\n  const filteredProducts = products.filter((product) => {\n    return product.name.toLowerCase().includes(searchValue.toLowerCase());\n  });\n\n  useEffect(() => {\n    queryProducts();\n  }, []);\n\n  return (\n    <div>\n      <Spinner isLoading={spinner} />\n      <div className={styles.filteredProducts}>\n        {subcategory ? (\n          <h2>{subcategory.toUpperCase()}</h2>\n        ) : (\n          <h2>All Clothes</h2>\n        )}\n        <div className={styles.productsGrid}>\n          {isLoading\n            ? null\n            : filteredProducts.map((item) => (\n                <Product key={item.id} item={item} />\n              ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  popularProductsCollections: (collection) =>\n    dispatch(popularProductsCollections(collection)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  searchValue: selectSearchQuery,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}